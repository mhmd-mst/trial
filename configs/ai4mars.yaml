DEVICE          : cuda              # device used for training and evaluation (cpu, cuda, cuda0, cuda1, ...)
SAVE_DIR        : 'output'         # output folder name used for saving the model, logs and inference results

MODEL:
  NAME          : DDRNet                                          # name of the model you are using
  BACKBONE      : ddrnet23slim                                                  # model variant
  PRETRAINED    : 'checkpoints/backbones/ddrnet_23slim.pth'              # backbone model's weight

DATASET:
  NAME          : ai4mars                                              # dataset name to be trained with (camvid, cityscapes, ade20k)
  ROOT          : 'data/ai4mars/'           # dataset root path
  IGNORE_LABEL  : 255

TRAIN:
  IMAGE_SIZE    : [512, 512]      # training image size in (h, w)
  BATCH_SIZE    : 2              # batch size used to train
  EPOCHS        : 20             # number of epochs to train
  EVAL_INTERVAL : 5              # evaluation interval during training
  AMP           : false           # use AMP in training
  DDP           : false           # use DDP training

LOSS:
  NAME          : CrossEntropy          # loss function name (ohemce, ce, dice)
  CLS_WEIGHTS   : true            # use class weights in loss calculation

OPTIMIZER:
  NAME          : adamw           # optimizer name
  LR            : 0.001           # initial learning rate used in optimizer
  WEIGHT_DECAY  : 0.01            # decay rate used in optimizer

SCHEDULER:
  NAME          : warmuppolylr    # scheduler name
  POWER         : 0.9             # scheduler power
  WARMUP        : 10              # warmup epochs used in scheduler
  WARMUP_RATIO  : 0.1             # warmup ratio


EVAL:
  MODEL_PATH    : 'output/ddrnet_ai4mars.pth'    # trained model file path
  IMAGE_SIZE    : [1024,1024]                          # evaluation image size in (h, w)
  MSF:
    ENABLE      : false                               # multi-scale and flip evaluation
    FLIP        : false                                # use flip in evaluation
    SCALES      : [0.5, 1.0]   # scales used in MSF evaluation


TEST:
  MODEL_PATH    : 'output/ddrnet_ai4mars.pth'    # trained model file path
  FILE          : 'assests/ai4mars'                    # filename or foldername
  IMAGE_SIZE    : [1024,1024]                          # inference image size in (h, w)
  OVERLAY       : true                                # save the overlay result (image_alpha+label_alpha)